name: Pre-release
on:
  release:
    types:
      - prereleased

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      # Update the checked out pyproject.toml with the version number of the release
      - name: Sync pyproject.toml with release version
        id: sync_version
        run: |
          TAG_NAME=${{ github.ref }}
          VERSION=$(echo $TAG_NAME | sed 's/refs\/tags\/v//')
          RELEASE_VERSION=${VERSION/-pre/}  # Remove '-pre' from the version
          sed -i "s/^version = \".*\"/version = \"$RELEASE_VERSION\"/" pyproject.toml
          echo "::set-output name=release_version::$RELEASE_VERSION"

      # Push the updated pyproject.toml back into the main branch
      - name: Commit and push changes to pyproject.toml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |       
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pyproject.toml
          git commit -m "Update version in pyproject.toml"
          git push --force origin HEAD:main

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.sync_version.outputs.release_version }}"
          release_name: "Release v${{ steps.sync_version.outputs.release_version }}"
          draft: false
          prerelease: false

