name: Release
on:
  release:
    types:
      - created

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build deployer image to use for pypi publishing
      - name: Build and push Docker image
        id: build
        run: docker build -t dbt-ai-deployer .
        env:
          DOCKER_BUILDKIT: 1

      # Update the checked out pyproject.toml with the version number of the release
      - name: Sync pyproject.toml with release version
        run: |
          TAG_NAME=${{ github.ref }}
          VERSION=$(echo $TAG_NAME | sed 's/refs\/tags\/v//')
          sed -i "s/^version = \".*\"/version = \"$VERSION\"/" pyproject.toml

      # Use the image from build-and-push step
      - name: Publish to PyPI
        run: |
          docker run --rm \
            -e PYPI_USERNAME='__token__' \
            -e PYPI_PASSWORD_PROD='${{ secrets.PYPI_API_TOKEN }}' \
            -v $PWD:/app \
            dbt-ai-deployer make publish-prod

      # Push the updated pyproject.toml back into the main branch
      - name: Commit and push changes to pyproject.toml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pyproject.toml
          git commit -m "Update version in pyproject.toml"
          git push --force origin HEAD:main
